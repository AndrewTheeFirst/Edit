Return values of printf() and scanf() in C/C++
Last Updated : 29 Nov, 2020
What values do the printf() and scanf() functions return ? 
 

printf() : It returns total number of Characters Printed, Or negative value if an output error or an encoding error 
Example 1: The printf() function in the code written below returns 6. As 'CODING' contains 6 characters.
 


1
// C/C++ program to demonstrate return value
2
// of printf()
3
#include <stdio.h>
4
​
5
int main()
6
{
7
    char st[] = "CODING";
8
​
9
    printf("While printing ");
10
    printf(", the value returned by printf() is : %d",
11
                                    printf("%s", st));
12
​
13
    return 0;
14
}

Output
While printing CODING, the value returned by printf() is : 6

Example 2: The printf() function in the code written below returns 9. As '123456789' contains 9 characters.
 


1
// C/C++ program to demonstrate return value
2
// of printf()
3
​
4
#include <stdio.h>
5
int main()
6
{
7
    long int n = 123456789;
8
​
9
    printf("While printing ");
10
    printf(", the value returned by printf() is : %d", 
11
                                    printf("%ld", n));
12
​
13
    return 0;
14
}

Output
While printing 123456789, the value returned by printf() is : 9

 


 

scanf() : It returns total number of Inputs Scanned successfully, or EOF if input failure occurs before the first receiving argument was assigned.
Example 1: The first scanf() function in the code written below returns 1, as it is scanning 1 item. Similarly second scanf() returns 2 as it is scanning 2 inputs and third scanf() returns 3 as it is scanning 3 inputs.
 


1
// C/C++ program to demonstrate return value
2
// of printf()
3
​
4
#include <stdio.h>
5
int main()
6
{
7
    char a[100], b[100], c[100];
8
​
9
    // scanf() with one input
10
    printf("\n First scanf() returns : %d",
11
                            scanf("%s", a));
12
​
13
    // scanf() with two inputs
14
    printf("\n Second scanf() returns : %d",
15
                       scanf("%s%s", a, b));
16
​
17
    // scanf() with three inputs
18
    printf("\n Third scanf() returns : %d", 
19
                  scanf("%s%s%s", a, b, c));
20
​
21
    return 0;
22
}
Input:
Hey!
welcome to
geeks for geeks


Output:
 First scanf() returns : 1
 Second scanf() returns : 2
 Third scanf() returns : 3